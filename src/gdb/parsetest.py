#!/usr/bin/env python

import os, sys, re

data = """[{'message': 'thread-group-added',
 'payload': {'id': 'i1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'done',
 'payload': None,
 'stream': 'stdout',
 'token': None,
 'type': 'result'}]
writing:
[{'message': 'done',
 'payload': {'files': [{'file': 'hello.c',
                         'fullname': '/home/jasonr/src/pygdbmi/pygdbmi/tests/sample_c_app/hello.c'},
                        {'file': '/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h',
                         'fullname': '/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h'},
                        {'file': 'bye.c',
                         'fullname': '/home/jasonr/src/pygdbmi/pygdbmi/tests/sample_c_app/bye.c'}]},
 'stream': 'stdout',
 'token': None,
 'type': 'result'}]
writing:
[{'message': 'done',
 'payload': {'bkpt': {'addr': '0x000000000040056e',
                       'disp': 'keep',
                       'enabled': 'y',
                       'file': 'hello.c',
                       'fullname': '/home/jasonr/src/pygdbmi/pygdbmi/tests/sample_c_app/hello.c',
                       'func': 'main',
                       'line': '17',
                       'number': '1',
                       'original-location': 'main',
                       'thread-groups': ['i1'],
                       'times': '0',
                       'type': 'breakpoint'}},
 'stream': 'stdout',
 'token': None,
 'type': 'result'}]
writing:
[{'message': 'thread-group-started',
 'payload': {'id': 'i1', 'pid': '15531'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'thread-created',
 'payload': {'group-id': 'i1', 'id': '1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'library-loaded',
 'payload': {'host-name': '/lib64/ld-linux-x86-64.so.2',
             'id': '/lib64/ld-linux-x86-64.so.2',
             'symbols-loaded': '0',
             'target-name': '/lib64/ld-linux-x86-64.so.2',
             'thread-group': 'i1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'running',
 'payload': None,
 'stream': 'stdout',
 'token': None,
 'type': 'result'},
{'message': 'running',
 'payload': {'thread-id': 'all'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'library-loaded',
 'payload': {'host-name': '/lib/x86_64-linux-gnu/libc.so.6',
             'id': '/lib/x86_64-linux-gnu/libc.so.6',
             'symbols-loaded': '0',
             'target-name': '/lib/x86_64-linux-gnu/libc.so.6',
             'thread-group': 'i1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'}]
writing:
[{'message': 'breakpoint-modified',
 'payload': {'bkpt': {'addr': '0x000000000040056e',
                       'disp': 'keep',
                       'enabled': 'y',
                       'file': 'hello.c',
                       'fullname': '/home/jasonr/src/pygdbmi/pygdbmi/tests/sample_c_app/hello.c',
                       'func': 'main',
                       'line': '17',
                       'number': '1',
                       'original-location': 'main',
                       'thread-groups': ['i1'],
                       'times': '1',
                       'type': 'breakpoint'}},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': None, 'payload': '\\n', 'stream': 'stdout', 'type': 'console'},
{'message': None,
 'payload': 'Breakpoint 1, main () at hello.c:17\\n',
 'stream': 'stdout',
 'type': 'console'},
{'message': None,
 'payload': '17\\t    printf(\\"Hello world\\\\n\\");\\n',
 'stream': 'stdout',
 'type': 'console'},
{'message': 'stopped',
 'payload': {'bkptno': '1',
             'core': '5',
             'disp': 'keep',
             'frame': {'addr': '0x000000000040056e',
                        'args': [],
                        'file': 'hello.c',
                        'fullname': '/home/jasonr/src/pygdbmi/pygdbmi/tests/sample_c_app/hello.c',
                        'func': 'main',
                        'line': '17'},
             'reason': 'breakpoint-hit',
             'stopped-threads': 'all',
             'thread-id': '1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'running',
 'payload': None,
 'stream': 'stdout',
 'token': None,
 'type': 'result'},
{'message': 'running',
 'payload': {'thread-id': 'all'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'stopped',
 'payload': {'core': '5',
             'frame': {'addr': '0x0000000000400578',
                        'args': [],
                        'file': 'hello.c',
                        'fullname': '/home/jasonr/src/pygdbmi/pygdbmi/tests/sample_c_app/hello.c',
                        'func': 'main',
                        'line': '18'},
             'reason': 'end-stepping-range',
             'stopped-threads': 'all',
             'thread-id': '1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'}]
writing:
[{'message': 'running',
 'payload': None,
 'stream': 'stdout',
 'token': None,
 'type': 'result'},
{'message': 'running',
 'payload': {'thread-id': 'all'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'stopped',
 'payload': {'core': '5',
             'frame': {'addr': '0x0000000000400582',
                        'args': [],
                        'file': 'hello.c',
                        'fullname': '/home/jasonr/src/pygdbmi/pygdbmi/tests/sample_c_app/hello.c',
                        'func': 'main',
                        'line': '19'},
             'reason': 'end-stepping-range',
             'stopped-threads': 'all',
             'thread-id': '1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'}]
writing:
[{'message': 'running',
 'payload': None,
 'stream': 'stdout',
 'token': None,
 'type': 'result'},
{'message': 'running',
 'payload': {'thread-id': 'all'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': None,
 'payload': 'Hello world',
 'stream': 'stdout',
 'type': 'output'},
{'message': None,
 'payload': '  leading spaces should be preserved. So should trailing spaces.  ',
 'stream': 'stdout',
 'type': 'output'},
{'message': None, 'payload': 'i = 0', 'stream': 'stdout', 'type': 'output'},
{'message': None, 'payload': 'i = 1', 'stream': 'stdout', 'type': 'output'},
{'message': None, 'payload': 'Bye', 'stream': 'stdout', 'type': 'output'},
{'message': None,
 'payload': '[Inferior 1 (process 15531) exited normally]\\n',
 'stream': 'stdout',
 'type': 'console'},
{'message': 'thread-exited',
 'payload': {'group-id': 'i1', 'id': '1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'thread-group-exited',
 'payload': {'exit-code': '0', 'id': 'i1'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'},
{'message': 'stopped',
 'payload': {'reason': 'exited-normally'},
 'stream': 'stdout',
 'token': None,
 'type': 'notify'}]"""

entries = []
a = re.sub('\s+', ' ', data)
a = a.replace('\n','')
for n, entry in enumerate(a.split('writing:')):
    exec('entries.extend(%s)' % entry.strip())

def getn(num):
    return entries[num]

if __name__ == "__main__":
    print getn(31)
